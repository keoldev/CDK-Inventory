Resources:
  imagecloudfrontS3LoggingBucket1623DCE7:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/S3LoggingBucket/Resource
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: This S3 bucket is used as the access logging bucket for another bucket
  imagecloudfrontS3LoggingBucketPolicy9AEA66BD:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: imagecloudfrontS3LoggingBucket1623DCE7
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - imagecloudfrontS3LoggingBucket1623DCE7
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - imagecloudfrontS3LoggingBucket1623DCE7
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - imagecloudfrontS3LoggingBucket1623DCE7
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - imagecloudfrontS3LoggingBucket1623DCE7
                        - Arn
                    - /*
          - Action: s3:PutObject
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - imagecloudfrontS3Bucket5F431E11
                    - Arn
              StringEquals:
                aws:SourceAccount:
                  Ref: AWS::AccountId
            Effect: Allow
            Principal:
              Service: logging.s3.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - imagecloudfrontS3LoggingBucket1623DCE7
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/S3LoggingBucket/Policy/Resource
  imagecloudfrontS3LoggingBucketAutoDeleteObjectsCustomResource694B51CB:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: imagecloudfrontS3LoggingBucket1623DCE7
    DependsOn:
      - imagecloudfrontS3LoggingBucketPolicy9AEA66BD
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/S3LoggingBucket/AutoDeleteObjectsCustomResource/Default
  imagecloudfrontS3Bucket5F431E11:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: image-inventory-bucket
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionTransitions:
              - StorageClass: GLACIER
                TransitionInDays: 90
            Status: Enabled
      LoggingConfiguration:
        DestinationBucketName:
          Ref: imagecloudfrontS3LoggingBucket1623DCE7
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/S3Bucket/Resource
  imagecloudfrontS3BucketPolicyA7A5B811:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: imagecloudfrontS3Bucket5F431E11
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - imagecloudfrontS3Bucket5F431E11
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - imagecloudfrontS3Bucket5F431E11
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - imagecloudfrontS3Bucket5F431E11
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - imagecloudfrontS3Bucket5F431E11
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - imagecloudfrontCloudFrontDistributionOrigin1S3OriginE41F8F24
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - imagecloudfrontS3Bucket5F431E11
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/S3Bucket/Policy/Resource
      cfn_nag:
        rules_to_suppress:
          - id: F16
            reason: Public website bucket policy requires a wildcard principal
  imagecloudfrontS3BucketAutoDeleteObjectsCustomResource0CC027CE:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: imagecloudfrontS3Bucket5F431E11
    DependsOn:
      - imagecloudfrontS3BucketPolicyA7A5B811
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/S3Bucket/AutoDeleteObjectsCustomResource/Default
  imagecloudfrontCloudfrontLoggingBucket3C678939:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/CloudfrontLoggingBucket/Resource
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: This S3 bucket is used as the access logging bucket for CloudFront Distribution
  imagecloudfrontCloudfrontLoggingBucketPolicyDD646806:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: imagecloudfrontCloudfrontLoggingBucket3C678939
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - imagecloudfrontCloudfrontLoggingBucket3C678939
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - imagecloudfrontCloudfrontLoggingBucket3C678939
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - imagecloudfrontCloudfrontLoggingBucket3C678939
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - imagecloudfrontCloudfrontLoggingBucket3C678939
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/CloudfrontLoggingBucket/Policy/Resource
  imagecloudfrontCloudfrontLoggingBucketAutoDeleteObjectsCustomResource95E295BF:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: imagecloudfrontCloudfrontLoggingBucket3C678939
    DependsOn:
      - imagecloudfrontCloudfrontLoggingBucketPolicyDD646806
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/CloudfrontLoggingBucket/AutoDeleteObjectsCustomResource/Default
  imagecloudfrontCloudFrontDistributionOrigin1S3OriginE41F8F24:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Identity for CdkStackimagecloudfrontCloudFrontDistributionOrigin1A988C114
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/CloudFrontDistribution/Origin1/S3Origin/Resource
  imagecloudfrontCloudFrontDistribution55627731:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          TargetOriginId: CdkStackimagecloudfrontCloudFrontDistributionOrigin1A988C114
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Logging:
          Bucket:
            Fn::GetAtt:
              - imagecloudfrontCloudfrontLoggingBucket3C678939
              - RegionalDomainName
        Origins:
          - DomainName:
              Fn::GetAtt:
                - imagecloudfrontS3Bucket5F431E11
                - RegionalDomainName
            Id: CdkStackimagecloudfrontCloudFrontDistributionOrigin1A988C114
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: imagecloudfrontCloudFrontDistributionOrigin1S3OriginE41F8F24
    Metadata:
      aws:cdk:path: CdkStack/image-cloudfront/CloudFrontDistribution/Resource
      cfn_nag:
        rules_to_suppress:
          - id: W70
            reason: Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: CdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs14.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: imagecloudfrontS3LoggingBucket1623DCE7
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: CdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.350185a1069fa20a23a583e20c77f6844218bd73097902362dc94f1a108f5d89
      aws:asset:property: Code
  LambdaDynamoDBinventorylambdacdkServiceRole9816146A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  Fn::Join:
                    - ""
                    - - "arn:"
                      - Ref: AWS::Partition
                      - ":logs:"
                      - Ref: AWS::Region
                      - ":"
                      - Ref: AWS::AccountId
                      - :log-group:/aws/lambda/*
            Version: "2012-10-17"
          PolicyName: LambdaFunctionServiceRolePolicy
    Metadata:
      aws:cdk:path: CdkStack/Lambda-DynamoDB/inventory-lambda-cdkServiceRole/Resource
  LambdaDynamoDBinventorylambdacdkServiceRoleDefaultPolicy74FC384D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - imagecloudfrontS3Bucket5F431E11
                - Arn
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - LambdaDynamoDBDynamoTable1F288269
                  - Arn
              - Ref: AWS::NoValue
        Version: "2012-10-17"
      PolicyName: LambdaDynamoDBinventorylambdacdkServiceRoleDefaultPolicy74FC384D
      Roles:
        - Ref: LambdaDynamoDBinventorylambdacdkServiceRole9816146A
    Metadata:
      aws:cdk:path: CdkStack/Lambda-DynamoDB/inventory-lambda-cdkServiceRole/DefaultPolicy/Resource
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.
  LambdaDynamoDBinventorylambdacdk17374F7A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: 'def handler(): print("Hello World")'
      Role:
        Fn::GetAtt:
          - LambdaDynamoDBinventorylambdacdkServiceRole9816146A
          - Arn
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: imagecloudfrontS3Bucket5F431E11
          TABLE_NAME:
            Ref: LambdaDynamoDBDynamoTable1F288269
      FunctionName: inventory-lambda-cdk
      Handler: lambda_function.handler
      Runtime: python3.9
      TracingConfig:
        Mode: Active
    DependsOn:
      - LambdaDynamoDBinventorylambdacdkServiceRoleDefaultPolicy74FC384D
      - LambdaDynamoDBinventorylambdacdkServiceRole9816146A
    Metadata:
      aws:cdk:path: CdkStack/Lambda-DynamoDB/inventory-lambda-cdk/Resource
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.
          - id: W89
            reason: This is not a rule for the general case, just for specific use cases/industries
          - id: W92
            reason: Impossible for us to define the correct concurrency for clients
  LambdaDynamoDBDynamoTable1F288269:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: product_id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: product_id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      TableName: db-inventory-cdk
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: CdkStack/Lambda-DynamoDB/DynamoTable/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/4WQTWsCMRCGf0vv2VhdKu2tuiIUCpXVe8kmUUZ3M5BJLBL2vzeb1NUeSi+Zr7zz8cx4mL/wxwfxRYVUp6KFhoetE/LEYuozUMnD0suTdqzamx8vmw22IC+3dI57Jlv0am/ROB5WQM5C4x2gYR8WDmAWUmqiN6WNA5fk1SBYD4K/fty36RmIjocaWz2Ukr2tcl2iFV2jBA9rb2QaHmtXv2fqYkSHKp66E03uk5y+Z5Unh12tCb2VecLo/yptLJ5BacsWRNpFZHHzA7sXVmgU5IHlPDJ+HSATtumMiDs+znrpaJLoj9iKCP3GZIfbkpXlv/p8cTGe9p7iHa5SYrXsmUGl+ZEm5+kznz7FhkcCKKyPmDvN62y/ARhjzNMRAgAA
    Metadata:
      aws:cdk:path: CdkStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

